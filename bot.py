import os
import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
from aiohttp import web
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN', '8281804030:AAEFEYgqigL3bdH4DL0zl1tW71fwwo_8cyU')

# –î–∞–Ω–Ω—ã–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π
stations = [
    {"id": 1, "name": "Love Radio", "listeners": 3200, "price": 280, "emoji": "‚ù§Ô∏è"},
    {"id": 2, "name": "–ê–≤—Ç–æ—Ä–∞–¥–∏–æ", "listeners": 2800, "price": 260, "emoji": "üöó"},
    {"id": 3, "name": "–†–∞–¥–∏–æ –î–∞—á–∞", "listeners": 3500, "price": 240, "emoji": "üè°"},
    {"id": 4, "name": "–†–∞–¥–∏–æ –®–∞–Ω—Å–æ–Ω", "listeners": 2600, "price": 250, "emoji": "üéµ"},
    {"id": 5, "name": "–†–µ—Ç—Ä–æ FM", "listeners": 2900, "price": 230, "emoji": "üìª"},
    {"id": 6, "name": "–Æ–º–æ—Ä FM", "listeners": 2100, "price": 270, "emoji": "üòä"}
]

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
time_slots = [
    "06:00-07:00 üåÖ –£—Ç—Ä–æ", "07:00-08:00 üöÄ –ü–∏–∫", "08:00-09:00 üìà –¢—Ä–∞—Ñ–∏–∫",
    "09:00-10:00 ‚òï –†–∞–±–æ—Ç–∞", "10:00-11:00 üìä –î–µ–Ω—å", "11:00-12:00 ‚è∞ –û–±–µ–¥",
    "12:00-13:00 üçΩÔ∏è –ü–µ—Ä–µ—Ä—ã–≤", "13:00-14:00 üìã –ü–æ—Å–ª–µ –æ–±–µ–¥–∞", "14:00-15:00 üîÑ –†–∞–±–æ—Ç–∞",
    "15:00-16:00 üìù –í–µ—á–µ—Ä", "16:00-17:00 üèÉ –í—ã—Ö–æ–¥", "17:00-18:00 üöÄ –ü–∏–∫",
    "18:00-19:00 üìà –¢—Ä–∞—Ñ–∏–∫", "19:00-20:00 üè† –î–æ–º", "20:00-21:00 üåô –û—Ç–¥—ã—Ö"
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
user_sessions = {}

# –ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è
async def handle_health(request):
    return web.Response(text="‚úÖ YA-RADIO Bot is running!")

async def handle_root(request):
    return web.Response(text="ü§ñ YA-RADIO Telegram Bot\n\nVisit https://ya-radio.ru")

def run_health_server():
    app = web.Application()
    app.router.add_get('/', handle_root)
    app.router.add_get('/health', handle_health)
    
    port = int(os.getenv('PORT', 10000))
    web.run_app(app, host='0.0.0.0', port=port, print=None)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_sessions[user_id] = {
        'selected_stations': [],
        'selected_slots': [],
        'campaign_days': 30,
        'spots_per_day': 5,
        'step': 'main'
    }
    
    keyboard = [
        ['üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
        ['üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
        ['‚ÑπÔ∏è –û –Ω–∞—Å']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    message = (
        "üéß *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ YA-RADIO\\!*\n\n"
        "*–†–∞–¥–∏–æ –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏* \\- –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ—â–∞—Ç–µ–ª—å –≤ –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫–µ –∏ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫–µ\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –Ω–∞ –Ω–∞—à–∏—Ö —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è—Ö:\n"
        "‚Ä¢ Love Radio ‚ù§Ô∏è\n‚Ä¢ –ê–≤—Ç–æ—Ä–∞–¥–∏–æ üöó\n‚Ä¢ –†–∞–¥–∏–æ –î–∞—á–∞ üè°\n"
        "‚Ä¢ –†–∞–¥–∏–æ –®–∞–Ω—Å–æ–Ω üéµ\n‚Ä¢ –†–µ—Ç—Ä–æ FM üìª\n‚Ä¢ –Æ–º–æ—Ä FM üòä\n\n"
        "*–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:*\n"
        "üìä 18,500\\+ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –≤ –¥–µ–Ω—å\n"
        "üë• 156,000\\+ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –º–µ—Å—è—Ü\n"
        "üéØ 52% –¥–æ–ª—è —Ä—ã–Ω–∫–∞\n"
        "üí∞ 4‚ÇΩ/—Å–µ–∫ –±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞\n"
        "üìç –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫ ‚Ä¢ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫"
    )
    
    await update.message.reply_text(
        message,
        reply_markup=reply_markup,
        parse_mode='MarkdownV2'
    )

# [–í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–°–ï –§–£–ù–ö–¶–ò–ò –ò–ó –ü–†–ï–î–´–î–£–©–ï–ì–û –ö–û–î–ê]
# show_stations_selection, handle_station_selection, reset_stations, next_to_slots,
# show_time_slots, handle_slot_selection, reset_slots, calculate_price,
# show_price_calculation, calculate_total_cost, contact_manager, show_statistics,
# show_calculator, show_contacts, show_about, goto_stations, new_calculation, handle_text
# (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏—Ö –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞
def run_bot():
    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_station_selection, pattern="^station_"))
    application.add_handler(CallbackQueryHandler(handle_slot_selection, pattern="^slot_"))
    application.add_handler(CallbackQueryHandler(reset_stations, pattern="^reset_stations$"))
    application.add_handler(CallbackQueryHandler(reset_slots, pattern="^reset_slots$"))
    application.add_handler(CallbackQueryHandler(next_to_slots, pattern="^next_to_slots$"))
    application.add_handler(CallbackQueryHandler(calculate_price, pattern="^calculate_price$"))
    application.add_handler(CallbackQueryHandler(contact_manager, pattern="^contact_manager$"))
    application.add_handler(CallbackQueryHandler(goto_stations, pattern="^goto_stations$"))
    application.add_handler(CallbackQueryHandler(new_calculation, pattern="^new_calculation$"))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç YA-RADIO –∑–∞–ø—É—â–µ–Ω!")
    print("üåê –°–∞–π—Ç: http://ya-radio.ru")
    print("üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (34535) 5-01-51")
    print("üìß Email: a.khlistunov@gmail.com")
    
    application.run_polling()

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º health server –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    health_thread = threading.Thread(target=run_health_server)
    health_thread.daemon = True
    health_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    run_bot()

if __name__ == '__main__':
    main()

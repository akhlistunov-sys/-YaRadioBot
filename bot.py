import os
import logging
import time
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
BOT_TOKEN = os.getenv('8281804030:AAEFEYgqigL3bdH4DL0zl1tW71fwwo_8cyU')

if not BOT_TOKEN:
    logging.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render.")
    exit(1)

# –î–∞–Ω–Ω—ã–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π
stations = [
    {"id": 1, "name": "Love Radio", "listeners": 3200, "price": 280, "emoji": "‚ù§Ô∏è"},
    {"id": 2, "name": "–ê–≤—Ç–æ—Ä–∞–¥–∏–æ", "listeners": 2800, "price": 260, "emoji": "üöó"},
    {"id": 3, "name": "–†–∞–¥–∏–æ –î–∞—á–∞", "listeners": 3500, "price": 240, "emoji": "üè°"},
    {"id": 4, "name": "–†–∞–¥–∏–æ –®–∞–Ω—Å–æ–Ω", "listeners": 2600, "price": 250, "emoji": "üéµ"},
    {"id": 5, "name": "–†–µ—Ç—Ä–æ FM", "listeners": 2900, "price": 230, "emoji": "üìª"},
    {"id": 6, "name": "–Æ–º–æ—Ä FM", "listeners": 2100, "price": 270, "emoji": "üòä"}
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
user_sessions = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_sessions[user_id] = {
        'selected_stations': [],
        'step': 'main'
    }
    
    keyboard = [
        ['üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
        ['üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
        ['‚ÑπÔ∏è –û –Ω–∞—Å']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    message = (
        "üéß *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ YA-RADIO\\!*\n\n"
        "*–†–∞–¥–∏–æ –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏* \\- –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ—â–∞—Ç–µ–ª—å –≤ –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫–µ –∏ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫–µ\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –Ω–∞ –Ω–∞—à–∏—Ö —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è—Ö:\n"
        "‚Ä¢ Love Radio ‚ù§Ô∏è\n‚Ä¢ –ê–≤—Ç–æ—Ä–∞–¥–∏–æ üöó\n‚Ä¢ –†–∞–¥–∏–æ –î–∞—á–∞ üè°\n"
        "‚Ä¢ –†–∞–¥–∏–æ –®–∞–Ω—Å–æ–Ω üéµ\n‚Ä¢ –†–µ—Ç—Ä–æ FM üìª\n‚Ä¢ –Æ–º–æ—Ä FM üòä\n\n"
        "*–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:*\n"
        "üìä 18,500\\+ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –≤ –¥–µ–Ω—å\n"
        "üë• 156,000\\+ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –º–µ—Å—è—Ü\n"
        "üéØ 52% –¥–æ–ª—è —Ä—ã–Ω–∫–∞\n"
        "üí∞ 4‚ÇΩ/—Å–µ–∫ –±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞\n"
        "üìç –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫ ‚Ä¢ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫"
    )
    
    await update.message.reply_text(
        message,
        reply_markup=reply_markup,
        parse_mode='MarkdownV2'
    )

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —Å—Ç–∞–Ω—Ü–∏–π
async def show_stations_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_session = user_sessions.get(user_id, {})
    user_session['step'] = 'selecting_stations'
    user_sessions[user_id] = user_session
    
    selected_count = len(user_session.get('selected_stations', []))
    selected_text = f"\n‚úÖ –í—ã–±—Ä–∞–Ω–æ: {selected_count} —Å—Ç–∞–Ω—Ü–∏–π" if selected_count > 0 else ""
    
    keyboard = []
    for station in stations:
        is_selected = station['id'] in user_session.get('selected_stations', [])
        emoji = "‚úÖ " if is_selected else ""
        keyboard.append([
            InlineKeyboardButton(
                f"{emoji}{station['emoji']} {station['name']}",
                callback_data=f"station_{station['id']}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager")
    ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    stations_text = "\n".join([
        f"{s['emoji']} *{s['name']}*\n"
        f"üë• {s['listeners']} —Å–ª—É—à–∞—Ç–µ–ª–µ–π/–¥–µ–Ω—å\n"
        f"üí∞ {s['price']}‚ÇΩ –∑–∞ —Ä–æ–ª–∏–∫\n"
        for s in stations
    ])
    
    message = f"*YA\\-RADIO \\- –í—ã–±–æ—Ä —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π*{selected_text}\n\n{stations_text}"
    
    if update.callback_query:
        await update.callback_query.edit_message_text(
            message, 
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )
    else:
        await update.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–Ω—Ü–∏–π
async def handle_station_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    user_session = user_sessions.get(user_id, {'selected_stations': []})
    
    station_id = int(query.data.split('_')[1])
    
    if station_id in user_session['selected_stations']:
        user_session['selected_stations'].remove(station_id)
    else:
        user_session['selected_stations'].append(station_id)
    
    user_sessions[user_id] = user_session
    await show_stations_selection(update, context)

# –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
async def contact_manager(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    user_session = user_sessions.get(user_id, {})
    
    selected_stations = [
        s for s in stations 
        if s['id'] in user_session.get('selected_stations', [])
    ]
    
    selected_text = ""
    if selected_stations:
        selected_text = f"\nüìª *–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏:* {', '.join([s['name'] for s in selected_stations])}"
    
    message = (
        f"üìû *YA\\-RADIO \\- –ö–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞*{selected_text}\n\n"
        "*–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä:*\n"
        "üë© –ù–∞–¥–µ–∂–¥–∞\n\n"
        "*–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n"
        "üì± –¢–µ–ª–µ—Ñ–æ–Ω: \\+7 \\(34535\\) 5\\-01\\-51\n"
        "üìß Email: a\\.khlistunov@gmail\\.com\n"
        "üåê –°–∞–π—Ç: ya\\-radio\\.ru\n\n"
        "*–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:*\n"
        "üïò –ü–Ω\\-–ü—Ç: 9:00\\-18:00\n"
        "üïô –°–±: 10:00\\-16:00\n"
        "üö´ –í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π"
    )
    
    keyboard = [
        [InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", url="tel:+73453550151")],
        [InlineKeyboardButton("üìß –ù–∞–ø–∏—Å–∞—Ç—å", url="mailto:a.khlistunov@gmail.com")],
        [InlineKeyboardButton("üåê –°–∞–π—Ç YA-RADIO", url="http://ya-radio.ru")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        message,
        reply_markup=reply_markup,
        parse_mode='MarkdownV2'
    )

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
async def show_statistics(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = (
        "üìä *YA\\-RADIO \\- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ö–≤–∞—Ç–∞*\n\n"
        "*–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –≤–µ—â–∞–Ω–∏—è:*\n"
        "üìç –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫ –∏ —Ä–∞–π–æ–Ω \\(~52,000 —á–µ–ª\\.\\)\n"
        "üìç –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫ –∏ —Ä–∞–π–æ–Ω \\(~46,500 —á–µ–ª\\.\\)\n\n"
        "*–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:*\n"
        "üìä –°—É—Ç–æ—á–Ω—ã–π –æ—Ö–≤–∞—Ç: 18,500\\+ —á–µ–ª\\.\n"
        "üë• –ú–µ—Å—è—á–Ω—ã–π –æ—Ö–≤–∞—Ç: 156,000\\+ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤\n"
        "üéØ –î–æ–ª—è —Ä—ã–Ω–∫–∞: 52%\n"
        "üí∞ –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: 4‚ÇΩ/—Å–µ–∫\n\n"
        "*–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:*\n"
        "üë®‚Äçüíº 35\\-45 –ª–µ—Ç: 36%\n"
        "üë®‚Äçüîß 46\\-55 –ª–µ—Ç: 30%\n"
        "üë¥ 56\\-65 –ª–µ—Ç: 22%\n"
        "üë¶ 18\\-34 –ª–µ—Ç: 12%"
    )
    
    if update.callback_query:
        await update.callback_query.message.reply_text(message, parse_mode='MarkdownV2')
    else:
        await update.message.reply_text(message, parse_mode='MarkdownV2')

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
async def show_calculator(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = (
        "üí∞ *YA\\-RADIO \\- –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏*\n\n"
        "*–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞:* 4‚ÇΩ –∑–∞ —Å–µ–∫—É–Ω–¥—É\n"
        "*–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–æ–ª–∏–∫ 30 —Å–µ–∫:* 120‚ÇΩ\n\n"
        "*–°–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫:*\n"
        "ü•â 50\\-99 —Ä–æ–ª–∏–∫–æ–≤: \\-20%\n"
        "ü•à 100\\-199 —Ä–æ–ª–∏–∫–æ–≤: \\-40%\n"
        "ü•á 200\\-299 —Ä–æ–ª–∏–∫–æ–≤: \\-50%\n"
        "üíé 300\\+ —Ä–æ–ª–∏–∫–æ–≤: \\-60%\n\n"
        "*–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã:*\n"
        "üìª \\+5% –∑–∞ –∫–∞–∂–¥—É—é –¥–æ–ø\\. —Å—Ç–∞–Ω—Ü–∏—é\n"
        "üìÖ \\+10% –∑–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ—Ç 3 –º–µ—Å—è—Ü–µ–≤\n\n"
        "–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ \"üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏\""
    )
    
    keyboard = [[InlineKeyboardButton("üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏", callback_data="goto_stations")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.callback_query:
        await update.callback_query.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )
    else:
        await update.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã
async def show_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = (
        "üìû *YA\\-RADIO \\- –ö–æ–Ω—Ç–∞–∫—Ç—ã*\n\n"
        "*–†–∞–¥–∏–æ –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏*\n"
        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ—â–∞—Ç–µ–ª—å –≤ –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫–µ –∏ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫–µ\n\n"
        "*–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n"
        "üì± –¢–µ–ª–µ—Ñ–æ–Ω: \\+7 \\(34535\\) 5\\-01\\-51\n"
        "üìß Email: a\\.khlistunov@gmail\\.com\n"
        "üåê –°–∞–π—Ç: ya\\-radio\\.ru\n\n"
        "*–†–µ–∫–ª–∞–º–Ω—ã–π –æ—Ç–¥–µ–ª:*\n"
        "üë© –ú–µ–Ω–µ–¥–∂–µ—Ä: –ù–∞–¥–µ–∂–¥–∞\n"
        "üïò –ì—Ä–∞—Ñ–∏–∫: –ü–Ω\\-–ü—Ç 9:00\\-18:00"
    )
    
    keyboard = [
        [InlineKeyboardButton("üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", url="tel:+73453550151")],
        [InlineKeyboardButton("üìß –ù–∞–ø–∏—Å–∞—Ç—å", url="mailto:a.khlistunov@gmail.com")],
        [InlineKeyboardButton("üåê –°–∞–π—Ç YA-RADIO", url="http://ya-radio.ru")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.callback_query:
        await update.callback_query.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )
    else:
        await update.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å
async def show_about(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    message = (
        "‚ÑπÔ∏è *YA\\-RADIO \\- –û –Ω–∞—Å*\n\n"
        "*–†–∞–¥–∏–æ –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏* \\- –≤–µ–¥—É—â–∏–π —Ä–∞–¥–∏–æ\\-—Ö–æ–ª–¥–∏–Ω–≥ –≤ –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫–µ –∏ –ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫–µ\n\n"
        "*–ù–∞—à–∏ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏:*\n"
        "‚ù§Ô∏è Love Radio \\- –º—É–∑—ã–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
        "üöó –ê–≤—Ç–æ—Ä–∞–¥–∏–æ \\- –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤ –ø—É—Ç–∏\n"
        "üè° –†–∞–¥–∏–æ –î–∞—á–∞ \\- —É—é—Ç –∏ –¥–æ–º–∞—à–Ω—è—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞\n"
        "üéµ –†–∞–¥–∏–æ –®–∞–Ω—Å–æ–Ω \\- —á–µ—Å—Ç–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏\n"
        "üìª –†–µ—Ç—Ä–æ FM \\- —Ö–∏—Ç—ã –ø—Ä–æ—à–ª—ã—Ö –ª–µ—Ç\n"
        "üòä –Æ–º–æ—Ä FM \\- –ø–æ–∑–∏—Ç–∏–≤ –∏ —Å–º–µ—Ö\n\n"
        "*–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å:*\n"
        "‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ—Ö–≤–∞—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏\n"
        "‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥\n"
        "‚úÖ –ì–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫\n"
        "‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è\n\n"
        "*–ù–∞—à–∞ –º–∏—Å—Å–∏—è:*\n"
        "–°–æ–∑–¥–∞–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\\!"
    )
    
    keyboard = [
        [InlineKeyboardButton("üéØ –ù–∞—á–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="goto_stations")],
        [InlineKeyboardButton("üåê –°–∞–π—Ç YA-RADIO", url="http://ya-radio.ru")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.callback_query:
        await update.callback_query.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )
    else:
        await update.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )

# –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å—Ç–∞–Ω—Ü–∏–π
async def goto_stations(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await show_stations_selection(update, context)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text
    
    if text == 'üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏':
        await show_stations_selection(update, context)
    elif text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        await show_statistics(update, context)
    elif text == 'üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        await show_calculator(update, context)
    elif text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await show_contacts(update, context)
    elif text == '‚ÑπÔ∏è –û –Ω–∞—Å':
        await show_about(update, context)
    else:
        message = (
            "*YA\\-RADIO \\- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n\n"
            "üéØ *–í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏* \\- –ø–æ–¥–±–æ—Ä —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π –∏ —Ä–∞—Å—á–µ—Ç\n"
            "üí∞ *–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä* \\- –±—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞* \\- –¥–∞–Ω–Ω—ã–µ –ø–æ –æ—Ö–≤–∞—Ç—É –∞—É–¥–∏—Ç–æ—Ä–∏–∏\n"
            "üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã* \\- —Å–≤—è–∑—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n"
            "‚ÑπÔ∏è *–û –Ω–∞—Å* \\- –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–∏—Ö —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è—Ö"
        )
        
        keyboard = [
            ['üéØ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'],
            ['üí∞ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
            ['‚ÑπÔ∏è –û –Ω–∞—Å']
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text(
            message,
            reply_markup=reply_markup,
            parse_mode='MarkdownV2'
        )

def main():
    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_station_selection, pattern="^station_"))
    application.add_handler(CallbackQueryHandler(contact_manager, pattern="^contact_manager$"))
    application.add_handler(CallbackQueryHandler(goto_stations, pattern="^goto_stations$"))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logging.info("ü§ñ –ë–æ—Ç YA-RADIO –∑–∞–ø—É—â–µ–Ω!")
    logging.info("üåê –°–∞–π—Ç: http://ya-radio.ru")
    logging.info("üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (34535) 5-01-51")
    logging.info("üìß Email: a.khlistunov@gmail.com")
    
    # –î–ª—è Render –∏—Å–ø–æ–ª—å–∑—É–µ–º polling —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    application.run_polling(
        drop_pending_updates=True,
        allowed_updates=Update.ALL_TYPES
    )

if __name__ == '__main__':
    main()

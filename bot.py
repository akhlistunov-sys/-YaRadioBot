import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# üîê –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
BOT_TOKEN = "–¢–û–ö–ï–ù_–û–¢_BOTFATHER"

logging.basicConfig(level=logging.INFO)

# –°–ø–∏—Å–∫–∏ —Å—Ç–∞–Ω—Ü–∏–π –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
stations = ["–†–∞–¥–∏–æ –¢—é–º–µ–Ω—å", "–†–∞–¥–∏–æ –ò—à–∏–º", "–†–∞–¥–∏–æ –Ø–ª—É—Ç–æ—Ä–æ–≤—Å–∫"]
time_slots = ["–£—Ç—Ä–æ (7‚Äì10)", "–î–µ–Ω—å (10‚Äì17)", "–í–µ—á–µ—Ä (17‚Äì21)"]

user_sessions = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìª –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏", callback_data="stations")],
        [InlineKeyboardButton("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calc")],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")]
    ]
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–∞–¥–∏–æ –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data

    if data == "stations":
        keyboard = [[InlineKeyboardButton(s, callback_data=f"st:{s}")] for s in stations]
        keyboard.append([InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="done_stations")])
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏–∏:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif data.startswith("st:"):
        station = data.split(":")[1]
        user_sessions.setdefault(user_id, {"stations": []})
        if station in user_sessions[user_id]["stations"]:
            user_sessions[user_id]["stations"].remove(station)
        else:
            user_sessions[user_id]["stations"].append(station)
        await query.answer(f"–í—ã–±—Ä–∞–Ω–æ: {station}")

    elif data == "done_stations":
        chosen = ", ".join(user_sessions.get(user_id, {}).get("stations", [])) or "–Ω–∏—á–µ–≥–æ"
        await query.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {chosen}")

    elif data == "calc":
        total = len(user_sessions.get(user_id, {}).get("stations", [])) * 1000
        await query.edit_message_text(f"üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {total} ‚ÇΩ")

    elif data == "contacts":
        await query.edit_message_text("üìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 (34535) 5-01-51\nüåê http://ya-radio.ru/")

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ /start üòä")

def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    print("‚úÖ –ë–æ—Ç YA-RADIO –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
